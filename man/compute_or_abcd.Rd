% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_or_abcd.R
\name{compute_or_abcd}
\alias{compute_or_abcd}
\title{Compute (r)OR}
\usage{
compute_or_abcd(.data, y, x, alpha = 0.05, na_format = "-", dig = 2)
}
\arguments{
\item{.data}{The data.table to compute from.}

\item{y}{A character string, the variable to explain.}

\item{x}{A character string, the explaining variable.}

\item{alpha}{Alpha risk.}

\item{na_format}{Character string to fill NA values in ror and ci legends.}

\item{dig}{Number of digits for rounding (this argument is passed to \code{cff})}
}
\description{
Compute bivariate OR and IC from contingency table extracted from a data.table.
}
\details{
Output is a data.table, containing the ror, the boundaries of the \code{1 - alpha} confidence interval, the ic, a simple formatting, and whether the result is significant (i.e. \code{low_ci > 1}).
Actually, the function computes an Odds-Ratio, which is not necessarily a reporting Odds-Ratio.
}
\examples{
# Say you want to perform a disproportionality analysis between colitis and
# nivolumab among ICI cases

demo <-
  demo_ \%>\%
  add_drug(
    d_code = ex_$d_drecno,
    drug_data = drug_
  ) \%>\%
  add_adr(
    a_code = ex_$a_llt,
    adr_data = adr_
  )

demo \%>\%
  compute_or_abcd(
    y = "a_colitis",
    x = "nivolumab"
  )


# Say you want to compute more than one univariate ror at a time.

many_drugs <-
  names(ex_$d_drecno)

# use vectorization functions

lapply(many_drugs, function(a_drug)
  demo \%>\%
    compute_or_abcd(
      y = "a_colitis",
      x = a_drug
    )
  ) \%>\%
  rbindlist()

# or purrr syntax (strictly identical)

many_drugs \%>\%
  purrr::map(
    function(a_drug)
      demo \%>\%
      compute_or_abcd(
        y = "a_colitis",
        x = a_drug
      )
  ) \%>\%
  purrr::list_rbind()

# could do the same with adrs

many_adrs <-
  names(ex_$a_llt)

many_adrs \%>\%
  purrr::map(
    function(an_adr)
      demo \%>\%
      compute_or_abcd(
        y = an_adr,
        x = "nivolumab"
      )
  ) \%>\%
  purrr::list_rbind()

# even with many adrs and many drugs!

many_drugs \%>\%
  purrr::map(
    function(a_drug) {
      many_adrs \%>\%
        purrr::map(
          function(an_adr)
            demo \%>\%
            compute_or_abcd(
              y = an_adr,
              x = a_drug
              )
          ) \%>\%
        purrr::list_rbind()
    }
  ) \%>\%
  purrr::list_rbind()
}
\keyword{ror}
